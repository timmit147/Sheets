name: Update File with Timestamp and Fetch JSON

on: 
  push:
    branches:
      - main

jobs:
  update_file:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x' # Change this to your desired Node.js version

      - name: Install dependencies
        run: |
          npm install node-fetch fs

      - name: Fetch JSON and Update File
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          SPREADSHEET_ID: ${{ secrets.SPREADSHEETID }}
          API_KEY: ${{ secrets.APIKEY }}
        run: |
          # Fetch JSON data using the function and store it in a temporary file
          node -e "const fetch = require('node-fetch'); const fs = require('fs'); var apiKey = process.env.API_KEY || 'YOUR_DEFAULT_API_KEY'; var spreadsheetId = process.env.SPREADSHEET_ID || 'YOUR_DEFAULT_SPREADSHEET_ID'; var sheetUrl = 'https://sheets.googleapis.com/v4/spreadsheets/' + spreadsheetId + '?includeGridData=true&key=' + apiKey; fetch(sheetUrl).then(response => response.json()).then(data => { fs.writeFileSync('temp.json', JSON.stringify(data, null, 2)); }).catch(error => { console.error('Error fetching Google Sheets data:', error.message); process.exit(1); });"

          # Generate the timestamp in the desired format
          TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
          # Create the content with the timestamp
          echo "$TIMESTAMP" > temp.txt
          cat temp.json >> temp.txt
          mv temp.txt js/json.js

          # Commit and push the changes back to the repository
          git config --global user.name "timmit147"
          git config --global user.email "timmeeuwsen@hotmail.nl"
          git add js/json.js
          git commit -m "Update file with timestamp and fetched JSON data"
          git push origin main
